name: Prod

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  prod-mvn-test-build:
    name: prod mvn test and build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean test

  prod-deploy:
    name: prod deploy to aws
    runs-on: ubuntu-22.04
    needs: prod-mvn-test-build
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::881990811866:role/qosocial-springboot-monolith-github
          role-session-name: sample-role-session
          aws-region: "us-east-1"

      - name: Trigger AWS Systems Manager Run Command
        id: send-command
        run: |
          command_id=$(aws ssm send-command \
          --document-name "qosocial-springboot-monolith-github-update-prod-EC2" \
          --targets '[{"Key":"tag:env","Values":["prod"]}]' \
          --timeout-seconds 600 \
          --max-concurrency "50" \
          --max-errors "0" \
          --region "us-east-1" \
          --query "Command.CommandId" \
          --output text)
          echo "::set-output name=command_id::$command_id"

      - name: Wait for Command Execution to Complete
        run: |
          command_id=${{ steps.send-command.outputs.command_id }}
          status="Pending"
          while [[ $status == *"Pending"* || $status == *"InProgress"* || $status == *"Delayed"* ]]; do
            echo "Waiting for command to complete..."
            sleep 10
            status=$(aws ssm list-command-invocations \
              --command-id $command_id \
              --details \
              --query "CommandInvocations[*].Status" \
              --output text \
              --region "us-east-1")
          done
          if [[ $(echo $status | grep -o "Success" | wc -l) -eq $(echo $status | wc -w) ]]; then
            echo "Command completed successfully."
          else
            echo "Command did not complete successfully. Status: $status"
            exit 1
          fi